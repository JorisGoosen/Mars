#version 440

layout(local_size_x = 16) in;

#define ID gl_GlobalInvocationID.x

#include "planeetDefinities.glsl"

//We hebben net van alles berekend maar de grond kan nu soms verschrikkelijk steil worden, das niet goed
//Dus gaan we er voor zorgen dat de grond een beetje inzakt als er een te groot hoogteverschil is met een van de buren.
//Per buur kijken we naar het verschil, is het groter dan een bepaald maximum dan nemen we een gedeelte en verplaatsen het naar beneden
//Maar dan moet natuurlijk exact dezelfde hoeveelheid bij de hogere worden weggehaald.

#define MAX_GROND_VERSCHIL 	0.00001 //(WATERMULT * 1.0)
#define GROND_VERZET		0.15

void main()
{
	vakken1[ID].grondSoort  = vakken0[ID].grondSoort;
	vakken1[ID].grondHoogte = clamp(vakken0[ID].grondHoogte, MIN_GRONDHOOGTE, MAX_GRONDHOOGTE);

	uint 		burenAantal = vakMetas[ID].burenAantal;
	float 		lokaal 		= vakken0[ID].grondHoogte,
				lokaalV		= 0;
	const bool 	isZand		= vakken0[ID].grondSoort == GS_ZAND;

	if(isnan(lokaal)) 
		lokaal = MIN_GRONDHOOGTE;

	for(uint buur=0; buur < burenAantal && buur < 6; buur++)
		if(vakken0[buurID(buur)].grondSoort == GS_ZAND)
		{
			float verschil = vakken0[buurID(buur)].grondHoogte;

			if(isnan(verschil))
				verschil = MIN_GRONDHOOGTE;

			if(verschil > lokaal || isZand) //Alleen weghalen uit midden als het zand is.
			{
				verschil = verschil - lokaal;
			
				if(abs(verschil) > MAX_GROND_VERSCHIL)
					lokaalV += verschil * GROND_VERZET;
			}
		}

	if(isZand || lokaalV > 0)
	{
		vakken1[ID].grondHoogte = clamp(lokaal + lokaalV, MIN_GRONDHOOGTE, MAX_GRONDHOOGTE);

		if(lokaalV > TOON_SEDIMENT)
			vakken1[ID].grondSoort = GS_ZAND;
	}	
}