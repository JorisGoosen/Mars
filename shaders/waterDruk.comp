#version 440

layout(local_size_x = 16) in;
#define ID gl_GlobalInvocationID.x

#include "planeetDefinities.glsl"

#define PIJP_LENGTE	1.0


uniform float verdamping;
uniform vec3	regenPlek;


// We hebben net in waterStroming.comp naar vakken1 geschreven, dus de nieuwe stromingswaardes staan daar.
// Maar we willen alsnog de nieuwe waterHoogte etc naar vakken1 schrijven, dus opletten.
void main()
{
	vec3 n;

	for(uint i=0; i<3; i++)
		n[i] = vakMetas[ID].normaal[i];

	uint 	aantalBuren = vakMetas[ID].burenAantal;
	float 	stroming 	= 0.0f,
			buurVocht	= 0.0f,
			mijnVocht	= vakken0[ID].vocht,
			buurLeven	= 0.0f;
	vec3	snelheid	= vec3(0.0f);
	vec3	buurNrml[6];

	for(uint buur=0; buur < aantalBuren && buur < 6; buur++)
	{	
		const uint 	buurID 		= vakMetas[ID].buren[buur],
					buurBuren 	= vakMetas[buurID].burenAantal;

		for(uint buurBuur=0; buurBuur < buurBuren; buurBuur++)
			if(vakMetas[buurID].buren[buurBuur] == ID)
			{
				for(uint i=0; i<3; i++)
					buurNrml[buur][i] = vakMetas[buurID].normaal[i];

				buurNrml[buur] = buurNrml[buur] - n;

				float stroomWeg = vakken1[buurID].pijpen[buurBuur] 	- vakken1[ID].pijpen[buur];

				stroming += stroomWeg;
				snelheid += buurNrml[buur] * stroomWeg;

				buurVocht += (vakken1[buurID].vocht - mijnVocht) / 6;
				buurLeven += vakken1[buurID].leven;
				
				break;
			}
	}

	

	vakken1[ID].waterHoogte = max(0, (vakken0[ID].waterHoogte + (stroming / PIJP_LENGTE)) - verdamping);
	vakken1[ID].vocht		= min(1.0, max(0.0, mijnVocht + buurVocht + min(verdamping, vakken0[ID].waterHoogte)));

	if(dot(regenPlek, n) 	> 0.99)
	{
		vakken1[ID].waterHoogte += vakken1[ID].vocht;
		vakken1[ID].vocht		 = 0.0f;
	}


	vakken1[ID].snelheid	= (length(snelheid) / aantalBuren) * 0.1;

	buurLeven /= aantalBuren;
	float leven = vakken0[ID].leven;

	if(vakken1[ID].waterHoogte <= 0.5)
		leven = max(0.001, min(vakken1[ID].vocht, max(leven * 1.001, leven + buurLeven * 0.3333)));
	else
		leven *= 0.85;

	vakken1[ID].leven = leven;

}