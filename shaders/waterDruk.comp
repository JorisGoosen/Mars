#version 440

layout(local_size_x = 16) in;

#define GS_ZAND		0
#define GS_GROND	1	//Ook wel humus of rijke grond
#define GS_ROTS		2
#define GS_KLEI		3
#define GS_IJS		4
#define GS_LOESS	5

#define ID gl_GlobalInvocationID.x

struct vak
{
	int		grondSoort	;
	float 	grondHoogte	;
	float	waterHoogte	;
	float	leven		;
	int		iets		;
	int		burenAantal	;
	int		buren[6]	;
	int		pijpen[6]	;
};

struct pijp
{
	float 	stroming 	;
};


layout(std430, binding = 0) buffer 			pingVak 	{ vak  vakken0[]; };
layout(std430, binding = 1) buffer 			pongVak 	{ vak  vakken1[]; };

layout(std430, binding = 2) buffer 			pingPijp 	{ pijp pijpen0[]; };
layout(std430, binding = 3) buffer 			pongPijp 	{ pijp pijpen1[]; };

void main()
{
	float 	verschil 	= vakken0[ID].waterHoogte;
	
	for(int buur=0; buur < vakken0[ID].burenAantal && buur < 6; buur++)
	{
		int pijp	 = vakken0[ID].pijpen[buur];

		if(vakken0[ID].buren[buur] > ID) 	verschil -= pijpen1[pijp].stroming; //pijpen1 want die hebben we net geupdate met waterStroming.comp
		else								verschil += pijpen1[pijp].stroming;
	}

	vakken1[ID].waterHoogte = max(0.0, verschil);
}