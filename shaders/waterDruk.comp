#version 440

layout(local_size_x = 16) in;
#define ID gl_GlobalInvocationID.x

#include "planeetDefinities.glsl"



// We hebben net in waterStroming.comp naar vakken1 geschreven, dus de nieuwe stromingswaardes staan daar.
// Maar we willen alsnog de nieuwe waterHoogte etc naar vakken1 schrijven, dus opletten.
void main()
{
	vec3 	n 			= vakMetas[ID].normaal.xyz;
	uint 	burenAantal = vakMetas[ID].burenAantal;
	float 	stroming 	= 0.0f,
			buurVocht	= 0.0f,
			mijnVocht	= vakken0[ID].vocht,
			buurLeven	= 0.0f,
			droesem 	= 0.0f,
			droesemWeg	= 0.0f;
	vec2 	snelheid 	= vec2(0.0f);
	vec3	hier		= vakHoogteNormaal(ID, false);

	//Ga de buur er telkens bijzoeken zodat we normalen kunnen berekenen en zo veel meer
	for(uint buur=0; buur < burenAantal && buur < 6; buur++)
	{	
		const uint 	buurID 		= vakMetas[ID].buren[buur],
					buurBuren 	= vakMetas[buurID].burenAantal;

		for(uint buurBuur=0; buurBuur < buurBuren; buurBuur++)
			if(vakMetas[buurID].buren[buurBuur] == ID)
			{
				
				float stroomBinnen = vakken1[buurID].pijpen[buurBuur] 	- vakken1[ID].pijpen[buur];

				stroming  += stroomBinnen;
				buurVocht += (vakken1[buurID].vocht - mijnVocht) / 6;
				buurLeven += vakken1[buurID].leven;
				snelheid  += vakMetas[ID].buurRicht[buur] * stroomBinnen;

				//Als stroomBinnen positief is komt het binnen
				uint 	//id 	= stroomBinnen >= 0 ? ID 	 : buurID ,
						and	= stroomBinnen >=  0	? buurID : ID;


				if(vakken0[and].waterHoogte > MIN_WATER_SED && abs(stroomBinnen) > ZEER_KLEIN)
					droesem		+=  sign(stroomBinnen) * clamp(abs(stroomBinnen / PIJP_LENGTE), 0., 1.) * max(0, vakken0[and].droesem);

				break;
			}
	}

	//Dan tijd om het een ent ander weg te schrijven
	snelheid /= burenAantal;
	vakken1[ID].snelheid 	= snelheid;/// length(snelheid / burenAantal; //mix(vakken0[ID].snelheid, (snelheid / burenAantal), 1.0);
	vakken1[ID].plek		= vakken0[ID].plek + snelheid;
	vakken1[ID].waterHoogte = max(0, (vakken0[ID].waterHoogte + (stroming / PIJP_LENGTE)) - verdamping);
	vakken1[ID].vocht		= max(0, mijnVocht + buurVocht + min(verdamping, vakken0[ID].waterHoogte));

	if(isnan(droesem) || isinf(droesem))
		droesem = 0;

	//laten we kijken of er iets veranderd moet worden aan de droesem
	float 	helling = 1.0;//max(0.1, (1.0f - dot(n, berekenNormaal(ID, true))));
			//helling	= sin(acos(helling));
	float	droesemCapaciteit 	= DROESEMHEID * min(1.0, length(snelheid) * VERTRAGER) * helling,
			droesemAangespoeld 	= droesem + vakken0[ID].droesem;
	
	if(isnan(droesemCapaciteit) || isinf(droesemCapaciteit))
		droesemCapaciteit = 0;

	
	//	droesemCapaciteit  = 0;

	droesem  = droesemAangespoeld - droesemCapaciteit;

	vakken1[ID].grondSoort  = vakken0[ID].grondSoort;
	
	if(vakken1[ID].waterHoogte <= ZEER_KLEIN && droesemAangespoeld > ZEER_KLEIN)
	{
		vakken1[ID].droesem 	= 0;
		vakken1[ID].grondHoogte	= vakken0[ID].grondHoogte + droesemAangespoeld;

		if(droesemAangespoeld > TOON_SEDIMENT)
			vakken1[ID].grondSoort  = GS_LOESS;
	}
	else if(abs(droesem) > ZEER_KLEIN)
	{
		droesem	*= droesem >= 0 ? BEZINKHEID : OPLOSHEID;

		if(droesem < 0) // == oplossen
		{
			if(-droesem > vakken0[ID].grondHoogte - MIN_GRONDHOOGTE)		
				droesem = vakken0[ID].grondHoogte 	- MIN_GRONDHOOGTE;

			if(vakken1[ID].waterHoogte < MIN_WATER_SED)
				droesem = 0;
		}
		else if(droesem >= 0) // == bezinken
		{
			if(vakken1[ID].waterHoogte < MIN_WATER_SED)
				droesem = droesemAangespoeld * BEZINKHEID;

			if(vakken0[ID].grondHoogte + droesem > MAX_GRONDHOOGTE)	
				droesem = MAX_GRONDHOOGTE 			- vakken0[ID].grondHoogte;
		}

		vakken1[ID].droesem 	= droesemAangespoeld      - droesem;
		vakken1[ID].grondHoogte	= vakken0[ID].grondHoogte + droesem;

		if(abs(droesem) > TOON_SEDIMENT)
			vakken1[ID].grondSoort  = GS_LOESS;
	}
	else
	{
		vakken1[ID].droesem 	= 0;
		vakken1[ID].grondHoogte	= vakken0[ID].grondHoogte;
	}


	float 	leven = vakken0[ID].leven,
			regen = dot(regenPlek, n);

	if(length(regenPlek) > 0 && true)
	{
		//het lekker laten regenen
		if(abs(regen) > 0.999)
		{
			const float minWaterErbij = vakken1[ID].vocht * 0.3333f,//max(0,  - 0.5),
						minderVochtig = minWaterErbij;// vakken1[ID].vocht > minWaterErbij ? max(minWaterErbij, 0.1 * vakken1[ID].vocht) : 0;

			vakken1[ID].waterHoogte += minderVochtig;
			vakken1[ID].vocht		-= minderVochtig;
		}
		else if(-regen > 0.98)
			leven = max(0.00001, leven);
	}
	
	//hoop doet leven
	buurLeven  /= burenAantal;

	const bool isZand = vakken1[ID].grondSoort == GS_ZAND || vakken1[ID].grondSoort == GS_LOESS;
	
	const float rotsGroei = 1.0001, 	rotsBuur = 0.003333, 
				zandGroei = 1.01, 		zandBuur = 0.03333,
				groei	= isZand ? zandGroei : rotsGroei,
				buurG	= isZand ? zandBuur  : rotsBuur ;

	

	if(vakken1[ID].waterHoogte <= 0.05)		leven = max(0.0, min(vakken1[ID].vocht, max(leven * groei, leven + (buurLeven * buurG))));
	else if(vakken1[ID].waterHoogte > 2.0)	leven *= 0.85;
	else									leven *= 0.95;

	vakken1[ID].leven = leven;

	//if(vakken1[ID].waterHoogte <= 0.00001) vakken1[ID].droesem = 0;

}